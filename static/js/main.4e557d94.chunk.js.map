{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","_useState","useState","_useState2","_slicedToArray","dropdownOpen","setDropdownOpen","_useState3","_useState4","clipText","setClipText","_useState5","passcode","passlength","upper","lower","nums","special","_useState6","password","setPassword","handleChange","e","_e$target","target","name","value","type","checked","prevState","_objectSpread","_defineProperty","React","createElement","Fragment","style","minHeight","backgroundColor","boxShadow","display","justifyContent","alignItems","href","textDecoration","padding","color","position","marginRight","onClick","border","cursor","borderRadius","marginInlineEnd","fontSize","top","right","zIndex","minWidth","background","listStyleType","fontWeight","flexDirection","placeholder","borderStyle","readOnly","navigator","clipboard","writeText","marginLeft","min","max","onChange","marker","passcode2","charset","i","rNum","Math","floor","random","length","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.4e557d94.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n    const [clipText, setClipText] = useState(\"Copy\")\n\n    const toggleDropdown = () => {\n        setDropdownOpen(!dropdownOpen);\n    };\n\n    let copyToClip = () => {\n        if (password.passlength) {\n            navigator.clipboard.writeText(password.passcode)\n            setClipText(\"Copied!\")\n        }\n    }\n\n    const [password, setPassword] = useState({\n        passcode: \"\",\n        passlength: 0,\n        upper: false,\n        lower: false,\n        nums: false,\n        special: false\n    })\n\n    const handleChange = (e) => {\n        setClipText(\"Copy\")\n        const {name, value, type, checked} = e.target\n        setPassword(prevState => ({\n            ...prevState,\n            [name]: type === \"checkbox\" ? checked : value\n        }))\n    }\n\n\n    let generatePassword = () => {\n\n        setClipText(\"Copy\")\n        setPassword(prevState => ({\n            ...prevState,\n            passcode: ''\n        }))\n\n        let passcode2 = ''\n        let charset = ''\n        if (password.upper) charset += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n        if (password.nums) charset += '123456789'\n        if (password.lower) charset += 'abcdefghijklmnopqrstuvwxyz'\n        if (password.special) charset += '~!@#$%^&*()_+<>?{}[],./'\n\n        for (let i = 0; i < password.passlength; i++) {\n            const rNum = Math.floor(Math.random() * charset.length)\n            passcode2 += charset[rNum];\n        }\n        setPassword(prevState => ({\n            ...prevState,\n            passcode: passcode2\n        }))\n\n    }\n\n    return (\n        <>\n            <div\n                style={{\n                    minHeight: \"100vh\",\n                    backgroundColor: \"#41B3A3\",\n                }}\n            >\n                <nav\n                    style={{\n                        backgroundColor: \"#C38D9B\",\n                        minHeight: \"10vh\",\n                        boxShadow: \"0px 2px 4px rgba(0, 0, 0, 0.2)\",\n                        display: \"flex\",\n                        justifyContent: \"space-between\",\n                        alignItems: \"center\",\n                    }}\n                >\n                    <a\n                        href=\"#\"\n                        style={{\n                            textDecoration: \"none\",\n                        }}\n                    >\n                        <h2\n                            style={{\n                                padding: \"15px\",\n                                color: \"white\",\n                            }}\n                        >\n                            New Password Generator\n                        </h2>\n                    </a>\n                    <div\n                        style={{\n                            position: \"relative\",\n                            marginRight: \"15px\",\n                        }}\n                    >\n                        <button\n                            onClick={toggleDropdown}\n                            style={{\n                                backgroundColor: \"#41B3A3\",\n                                border: \"none\",\n                                cursor: \"pointer\",\n                                color: \"white\",\n                                borderRadius: \"20px\",\n                                padding: \" 10px 20px\",\n                                marginInlineEnd: \"20px\",\n                                fontSize: \"1.25rem\",\n                            }}\n                        >\n                            Dropdown\n                        </button>\n                        {dropdownOpen && (\n                            <div\n                                style={{\n                                    position: \"absolute\",\n                                    top: \"calc(100% + 10px)\",\n                                    right: 0,\n                                    boxShadow: \"0px 2px 4px rgba(0, 0, 0, 0.2)\",\n                                    zIndex: 1,\n                                    marginRight: \"20px\",\n                                    minWidth: \"85%\",\n                                    borderRadius: \"20px\",\n                                    background: \"#C38D9B\",\n                                }}\n                            >\n                                <ul\n                                    style={{\n                                        listStyleType: \"none\",\n                                        padding: \"10px 0 0 10px \",\n                                    }}\n                                >\n                                    <li>\n                                        <a\n                                            href=\"#action/1\"\n                                            style={{\n                                                display: \"block\",\n                                                padding: \"10px 20px\",\n                                                textDecoration: \"none\",\n                                                color: \"white\",\n                                                fontWeight: \"500\",\n                                            }}\n                                        >\n                                            Action 1\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <a\n                                            href=\"#action/2\"\n                                            style={{\n                                                display: \"block\",\n                                                padding: \"10px 20px\",\n                                                textDecoration: \"none\",\n                                                color: \"white\",\n                                                fontWeight: \"500\",\n                                            }}\n                                        >\n                                            Action 2\n                                        </a>\n                                    </li>\n                                </ul>\n                            </div>\n                        )}\n                    </div>\n                </nav>\n                <div\n                    style={{\n                        minHeight: \"80vh\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                    }}\n                >\n                    <div\n                        style={{\n                            backgroundColor: \"white\",\n                            borderRadius: \"10px\",\n                            minHeight: \"50vh\",\n                            minWidth: \"50vb\",\n                            padding: \"15px 30px\",\n                            boxShadow: \"0px 4px 8px rgba(0, 0, 0, 0.2)\",\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            justifyContent: \"space-evenly\"\n                        }}\n                    >\n                        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                            <input placeholder={password.passcode} value={password.passcode}\n                                   style={{\n                                       cursor: \"not-allowed\",\n                                       minWidth: \"70%\",\n                                       padding: \"5px\",\n                                       borderRadius: \"5px\",\n                                       borderStyle: \"border-box\"\n                                   }} readOnly/>\n                            <button onClick={copyToClip}\n                                    style={{\n                                        marginLeft: \"auto\",\n                                        borderStyle: \"none\",\n                                        backgroundColor: \"#41B3A3\",\n                                        color: \"white\",\n                                        fontWeight: \"500\",\n                                        minWidth: \"25%\",\n                                        borderRadius: \"10px\",\n                                        padding: \"5px\"\n                                    }}>{clipText}\n                            </button>\n                        </div>\n                        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                            <label>select length</label>\n                            <input type=\"range\"\n                                   value={password.passlength}\n                                   min={1}\n                                   max={20}\n                                   name=\"passlength\"\n                                   onChange={handleChange}\n                                   style={{\n                                       marker: \"none\",\n                                       color: \"black\"\n                                   }}/>\n                            <span style={{fontSize: \"1.1rem\", fontWeight: \"700px\"}}>{password.passlength}</span>\n                        </div>\n                        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                            <label> include uppercases?</label>\n                            <input type=\"checkbox\" name=\"upper\" checked={password.upper} onClick={handleChange}\n                                   style={{}}></input>\n                        </div>\n                        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                            <label> include lowercases?</label>\n                            <input type=\"checkbox\" name=\"lower\" checked={password.lower} onClick={handleChange}\n                                   style={{}}></input>\n                        </div>\n                        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                            <label style={{}}>\n                                include numbers?\n                            </label>\n                            <input type=\"checkbox\" name=\"nums\" checked={password.nums} onClick={handleChange}\n                                   style={{}}></input>\n                        </div>\n                        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                            <label> include special characters?</label>\n                            <input type=\"checkbox\" name=\"special\" checked={password.special} onClick={handleChange}\n                                   style={{}}></input>\n                        </div>\n                        <button onClick={generatePassword} style={{\n                            marginLeft: \"auto\",\n                            borderStyle: \"none\",\n                            backgroundColor: \"#41B3A3\",\n                            color: \"white\",\n                            fontWeight: \"500\",\n                            minWidth: \"100%\",\n                            padding: \"10px 0 \",\n                            fontSize: \"1.2rem\",\n                            borderRadius: \"10px\",\n                        }}>generate password\n                        </button>\n                    </div>\n                </div>\n                <footer\n                    style={{\n                        minHeight: \"10vh\",\n                        background: \"#C38D9B\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\"\n                    }}\n                >\n                    <div style={{\n                        display: \"flex\",\n                        justifyContent: \"space-between\",\n                        fontSize: \"1.5rem\",\n                        fontWeight: \"500\",\n                        color: \"white\"\n                    }}> ©️Navdeep Jajoria™️\n                    </div>\n                </footer>\n            </div>\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"../node_modules/react-bootstrap/dist/react-bootstrap\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}